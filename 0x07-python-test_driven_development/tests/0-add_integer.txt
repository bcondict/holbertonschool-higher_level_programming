0-add_integer
=============

    >>> add_integer = __import__('0-add_integer').add_integer

    >>> add_integer(3, 5)
    8

    >>> add_integer(-3, 5)
    2

    >>> add_integer(4, -1)
    3

    >>> add_integer(3.5, 5)
    8

    >>> add_integer(-4.1, 9)
    5

    >>> add_integer(4, 2.3)
    6

    >>> add_integer(7, -1.3)
    6

    >>> add_integer(4.1, 1.2)
    5

    >>> add_integer(-9.1, -1.9)
    -10

    >>> add_integer(2)
    100

    >>> add_integer(2.1)
    100

    >>> add_integer('a', 4)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(1, 'b')
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer('holberton')
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(1, 'holberton')
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(True)
    99

    >>> add_integer(True, False)
    1

    >>> add_integer(True, 4)
    5
    
    >>> add_integer(1, True)
    2

    >>> add_integer(-True)
    97

    >>> add_integer(None, 9)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(None, None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(1, None)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(1, float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(1, 2, 3)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

